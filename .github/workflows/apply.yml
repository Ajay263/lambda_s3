name: 'Apply Infrastructure'

on:
  workflow_dispatch:
    inputs:
      action:
        description: 'Terraform action to perform'
        required: true
        default: 'apply'
        type: choice
        options:
          - apply
          - destroy
          - apply-with-lambda
permissions:
  contents: read
  id-token: write
  actions: write 

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    environment: production

    defaults:
      run:
        shell: bash
        working-directory: ./terraform

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.ROLE_TO_ASSUME }}
          aws-region: us-east-1
          role-session-name: GitHubActions
          
      - name: Verify AWS Credentials
        run: |
          echo "Verifying AWS credentials..."
          aws sts get-caller-identity
          echo "Checking S3 access..."
          aws s3 ls
          echo "AWS credentials verified."

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.11.4

      - name: Terraform Init
        run: terraform init

      - name: Terraform Format Check
        run: terraform fmt -check

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Plan - Initial Infrastructure
        if: github.event.inputs.action == 'apply'
        run: terraform plan -input=false -out=tfplan -var="lambda_image_exists=false"

      - name: Terraform Apply - Initial Infrastructure
        if: github.event.inputs.action == 'apply'
        run: terraform apply -input=false -auto-approve tfplan

      - name: Terraform Plan - With Lambda
        if: github.event.inputs.action == 'apply-with-lambda'
        run: terraform plan -input=false -out=tfplan -var="lambda_image_exists=true"

      - name: Terraform Apply - With Lambda
        if: github.event.inputs.action == 'apply-with-lambda'
        run: terraform apply -input=false -auto-approve tfplan

      - name: Terraform Plan - Destroy
        if: github.event.inputs.action == 'destroy'
        run: terraform plan -destroy -out=tfplan -input=false

      - name: Terraform Destroy
        if: github.event.inputs.action == 'destroy'
        run: terraform apply -input=false -auto-approve tfplan
        